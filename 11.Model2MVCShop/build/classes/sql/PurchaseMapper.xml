<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
 	
 	
	<resultMap type="purchase" id="purchaseSelectMap">
		<result property="tranNo" 				column="TRAN_NO" 		jdbcType="INTEGER"/>
  		<result property="purchaseProd.prodNo" 	column="PROD_NO" 		jdbcType="INTEGER"/>
  		<result property="purchaseProd.prodName" 	column="PROD_NAME" 		jdbcType="VARCHAR"/>
  		<result property="purchaseProd.prodDetail" 	column="prod_detail" 		jdbcType="VARCHAR" />
  		<result property="purchaseProd.price" 				column="price" 					jdbcType="NUMERIC" />
		<result property="purchaseProd.fileName" 			column="image_file" 		jdbcType="VARCHAR" />
  		<result property="buyer.userId" 		column="BUYER_ID"		jdbcType="VARCHAR"/>
  		<result property="paymentOption"		column="PAYMENT_OPTION" jdbcType="CHAR"/>
  		<result property="receiverName" 		column="RECEIVER_NAME" 	jdbcType="VARCHAR"/>
  		<result property="receiverPhone" 		column="RECEIVER_PHONE" jdbcType="VARCHAR"/>
  		<result property="divyAddr" 			column="demailaddr" 		jdbcType="VARCHAR"/>
  		<result property="divyRequest" 			column="DLVY_REQUEST" 	jdbcType="VARCHAR"/>
  		<result property="tranCode" 			column="TRAN_STATUS_CODE" 	jdbcType="CHAR"/>
  		<result property="orderDate" 			column="ORDER_DATA" 		jdbcType="DATE"/>  		 
  		<result property="divyDate" 			column="DLVY_DATE"		jdbcType="DATE"/>
  	</resultMap>

	
	<!-- SQL : INSERT -->
	<insert 	id="addPurchase"		parameterType="purchase" >
	 	INSERT
		INTO transaction ( tran_no , prod_no , buyer_id , payment_option , receiver_name, receiver_phone, demailaddr,
		dlvy_Request, tran_status_code, order_data, dlvy_date ) 
		VALUES	 (	seq_transaction_tran_no.nextval , #{purchaseProd.prodNo} , #{buyer.userId} , #{paymentOption:VARCHAR} , #{receiverName:VARCHAR}, 
						#{receiverPhone:VARCHAR}, #{divyAddr:VARCHAR}, #{divyRequest:VARCHAR}, '1', SYSDATE, #{divyDate:DATE})

	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getPurchase"	parameterType="int"	resultMap="purchaseSelectMap">
		select
		p.*, t.tran_no , t.prod_no , t.buyer_id , t.payment_option, t.receiver_name, t.receiver_phone, t.demailaddr,
		t.dlvy_Request, t.tran_status_code, t.order_data, t.dlvy_date	
		FROM transaction t, product p
		WHERE t.tran_no = #{value}
		AND t.prod_no=p.prod_no
	 </select>
	 
	  <select 	id="getPurchase2"	parameterType="int"	resultMap="purchaseSelectMap">
		select
		tran_no , prod_no , buyer_id , payment_option, receiver_name, receiver_phone, demailaddr,
		dlvy_Request, tran_status_code, order_data, dlvy_date	
		FROM transaction
		WHERE prod_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updatePurchase"	parameterType="purchase">
	   	UPDATE transaction
	   	<set>
	   	payment_option= #{paymentOption:CHAR},
	   	dlvy_Request=#{divyRequest:VARCHAR},
	   	receiver_phone=#{receiverPhone:VARCHAR},
	   	demailaddr=#{divyAddr:VARCHAR}, 
	   	receiver_name=#{receiverName:VARCHAR},
	   	dlvy_date=#{divyDate:DATE}
	   	</set>
	   	WHERE tran_no = #{tranNo:INTEGER}
	 </update>
	
	 <update	id="updateTranCode"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
	  	tran_status_code = #{tranCode:CHAR}
	   	</set>
	   	WHERE prod_no=#{purchaseProd.prodNo:VARCHAR}
	 </update>	 
	 
	<!-- SQL : SELECT LIST -->
	<select  id="getPurchaseList"  parameterType="map"	resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM	(	SELECT t.*, p.prod_name FROM transaction t, product p 
	  								WHERE Buyer_id=#{buyerId} AND t.prod_no=p.prod_no
	  								ORDER BY ORDER_DATA DESC  
											
											 ) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} ) -->
		
	
<!-- 	SQL : SELECT ROW Count	 --> 
	 <select  id="getTotalCount"  parameterType="String"	 resultType="int">
	 
	  	SELECT COUNT(*)
	  	FROM(	SELECT * FROM transaction 
	  								WHERE Buyer_id=#{value} 
	  								ORDER BY ORDER_DATA DESC  ) countTable						
	 </select>
	 
</mapper>